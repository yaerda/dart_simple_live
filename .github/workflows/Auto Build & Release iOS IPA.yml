name: Auto Build & Release iOS IPA

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Version tag (e.g., v1.9.4)'
        required: false
        default: ''

jobs:
  build-ios-release:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          cache: true

      - name: Install dependencies
        run: |
          cd simple_live_app
          flutter pub get

      # Optional: Setup iOS code signing (if you have certificates)
      # - name: Setup iOS code signing
      #   run: |
      #     # Create keychain
      #     security create-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
      #     security default-keychain -s build.keychain
      #     security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
      #     security set-keychain-settings -t 3600 -u build.keychain
      #     
      #     # Import certificate
      #     echo "${{ secrets.APPLE_CERT_BASE64 }}" | base64 --decode > certificate.p12
      #     security import certificate.p12 -k build.keychain -P "${{ secrets.APPLE_CERT_PASSWORD }}" -T /usr/bin/codesign
      #     security set-key-partition-list -S apple-tool:,apple: -s -k "${{ secrets.KEYCHAIN_PASSWORD }}" build.keychain
      #
      #     # Install provisioning profile
      #     mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
      #     echo "${{ secrets.PROVISIONING_PROFILE_BASE64 }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      - name: Build iOS (no code sign)
        run: |
          cd simple_live_app
          flutter build ios --release --no-codesign

      - name: Create unsigned IPA
        run: |
          cd simple_live_app
          mkdir -p build/ios/iphoneos/Payload
          cp -R build/ios/iphoneos/Runner.app build/ios/iphoneos/Payload/Runner.app
          cd build/ios/iphoneos/
          zip -q -r ios_no_sign.ipa Payload
          cd ../../..

      # Uncomment if you have proper code signing setup
      # - name: Build signed IPA
      #   run: |
      #     cd simple_live_app
      #     flutter build ipa --release --export-method app-store

      - name: Upload IPA to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: |
            simple_live_app/build/ios/iphoneos/ios_no_sign.ipa
          # simple_live_app/build/ios/ipa/*.ipa (for signed IPA)

      - name: Read version info
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: assets/app_version.json

      - name: Generate changelog from commits
        id: changelog
        run: |
          # Generate changelog from recent commits
          echo "## Changes" > CHANGELOG.md
          git log --pretty=format:"- %s (%an)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> CHANGELOG.md || echo "- Latest changes" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "${{ fromJson(steps.version.outputs.content).version_desc }}" >> CHANGELOG.md

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: "iOS Release ${{ fromJson(steps.version.outputs.content).version }}"
          body_path: CHANGELOG.md
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}
          tag_name: ${{ github.event.inputs.version_tag || github.ref_name }}
          files: |
            simple_live_app/build/ios/iphoneos/ios_no_sign.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Job completed
        run: echo "üçé iOS IPA build and release completed successfully!"
